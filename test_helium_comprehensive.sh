#!/bin/bash

# Comprehensive test script for ARM Helium/MVE backend implementation
# This tests all components without requiring LLVM to be installed

set -e  # Exit on any error

echo "=================================================="
echo "ARM Helium/MVE Backend Implementation Test Suite"
echo "=================================================="
echo

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

print_test() {
    echo -e "${BLUE}TEST:${NC} $1"
}

print_pass() {
    echo -e "${GREEN}âœ“ PASS:${NC} $1"
}

print_error() {
    echo -e "${RED}âœ— ERROR:${NC} $1"
    exit 1
}

# Test 1: File existence
print_test "Checking file existence"
files=(
    "src/target_enums.h"
    "src/target_enums.cpp" 
    "cmake/CommonStdlibBuiltins.cmake"
    "CMakeLists.txt"
    "builtins/target-helium-common.ll"
    "builtins/target-helium-i32x4.ll"
    "builtins/target-helium-i16x8.ll"
    "builtins/target-helium-i8x16.ll"
    "tests/helium_test.ispc"
    "docs/helium_backend.md"
)

for file in "${files[@]}"; do
    if [[ -f "$file" ]]; then
        echo "  âœ“ $file exists"
    else
        print_error "$file does not exist"
    fi
done
print_pass "All required files exist"
echo

# Test 2: Enum integration
print_test "Running enum parsing tests"
if ./test_helium_enums; then
    print_pass "Enum parsing and conversion tests"
else
    print_error "Enum tests failed"
fi
echo

# Test 3: CMake integration
print_test "Testing CMake target integration"
if cmake -P test_helium_cmake_v2.cmake >/dev/null 2>&1; then
    print_pass "CMake target integration"
else
    print_error "CMake integration test failed"
fi
echo

# Test 4: Architecture determination
print_test "Testing architecture determination"
if cmake -P test_helium_arch_simple.cmake >/dev/null 2>&1; then
    print_pass "Architecture determination function"
else
    print_error "Architecture determination test failed"
fi
echo

# Test 5: LLVM IR processing with M4
print_test "Testing LLVM IR file processing"
m4_output=$(m4 -Ibuiltins -DBUILD_OS=UNIX -DRUNTIME=32 builtins/target-helium-i32x4.ll 2>&1)
if echo "$m4_output" | grep -q "llvm.arm.mve.vrecpe.f32"; then
    print_pass "M4 processing includes MVE intrinsics"
else
    print_error "M4 processing failed or missing MVE intrinsics"
fi

if echo "$m4_output" | grep -q "define.*@__rcp_varying_float"; then
    print_pass "Generated reciprocal function"
else
    print_error "Missing reciprocal function in output"
fi
echo

# Test 6: Check for required content in source files
print_test "Verifying source code content"

# Check target_enums.h
if grep -q "helium_i32x4" src/target_enums.h && grep -q "ISPCTargetIsHelium" src/target_enums.h; then
    print_pass "target_enums.h contains Helium definitions"
else
    print_error "target_enums.h missing Helium content"
fi

# Check target_enums.cpp
if grep -q "helium-i32x4" src/target_enums.cpp && grep -q "ISPCTargetIsHelium" src/target_enums.cpp; then
    print_pass "target_enums.cpp contains Helium implementations"
else
    print_error "target_enums.cpp missing Helium content"
fi

# Check CMakeLists.txt
if grep -q "HELIUM_TARGETS" CMakeLists.txt; then
    print_pass "CMakeLists.txt includes Helium targets"
else
    print_error "CMakeLists.txt missing Helium targets"
fi

# Check CommonStdlibBuiltins.cmake
if grep -q "helium" cmake/CommonStdlibBuiltins.cmake; then
    print_pass "CommonStdlibBuiltins.cmake includes Helium support"
else
    print_error "CommonStdlibBuiltins.cmake missing Helium support"
fi
echo

# Test 7: Verify documentation
print_test "Checking documentation"
if grep -q "Helium" README.md && grep -q "MVE" README.md; then
    print_pass "README.md updated with Helium information"
else
    print_error "README.md missing Helium information"
fi

if [[ -f "docs/helium_backend.md" ]] && grep -q "ARM Helium" docs/helium_backend.md; then
    print_pass "Helium backend documentation exists"
else
    print_error "Helium backend documentation missing or incomplete"
fi
echo

# Test 8: ISPC test file syntax check
print_test "Checking ISPC test file syntax"
if grep -q "export void.*helium" tests/helium_test.ispc && grep -q "foreach" tests/helium_test.ispc; then
    print_pass "ISPC test file has correct syntax structure"
else
    print_error "ISPC test file syntax issues"
fi
echo

# Final summary
echo "=================================================="
echo -e "${GREEN}ðŸŽ‰ ALL TESTS PASSED!${NC}"
echo "=================================================="
echo
echo "Summary of Helium/MVE implementation:"
echo "â€¢ Added 3 Helium targets: helium-i8x16, helium-i16x8, helium-i32x4"
echo "â€¢ Created LLVM IR files with ARM MVE intrinsics"
echo "â€¢ Integrated with ISPC build system (CMake)"
echo "â€¢ Added proper enum parsing and string conversion"
echo "â€¢ Restricted to 32-bit ARM architecture (Cortex-M)"
echo "â€¢ Created comprehensive documentation"
echo "â€¢ Added test files and examples"
echo
echo "The implementation is ready for compilation with LLVM that has ARM MVE support!"
echo "To build: cmake .. -DARM_ENABLED=ON && make"